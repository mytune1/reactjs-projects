{"ast":null,"code":"import _slicedToArray from \"/home/chandra/Desktop/useless/projects/reacthooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chandra/Desktop/useless/projects/reacthooks/src/Hooks-App/Component/WindowSize.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function WindowSize() {\n  const _useState = useState([window.innerWidth, window.innerHeight]),\n        _useState2 = _slicedToArray(_useState, 2),\n        _useState2$ = _slicedToArray(_useState2[0], 2),\n        windowWidth = _useState2$[0],\n        windowHeight = _useState2$[1],\n        setWindowSize = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        visible = _useState4[0],\n        setVisible = _useState4[1];\n\n  useEffect(() => {\n    let timeoutId;\n\n    const handleResize = () => {\n      setWindowSize([window.innerWidth, window.innerHeight]);\n      setVisible(true);\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => setVisible(false), 500);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"window-size \".concat(visible ? '' : 'hidden'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, windowWidth, \" x \", windowHeight);\n}","map":{"version":3,"sources":["/home/chandra/Desktop/useless/projects/reacthooks/src/Hooks-App/Component/WindowSize.js"],"names":["React","useState","useEffect","WindowSize","window","innerWidth","innerHeight","windowWidth","windowHeight","setWindowSize","visible","setVisible","timeoutId","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA,oBACkBF,QAAQ,CAAC,CAACG,MAAM,CAACC,UAAR,EAAoBD,MAAM,CAACE,WAA3B,CAAD,CAD1B;AAAA;AAAA;AAAA,QAC3BC,WAD2B;AAAA,QACdC,YADc;AAAA,QACCC,aADD;;AAAA,qBAELR,QAAQ,CAAC,KAAD,CAFH;AAAA;AAAA,QAE5BS,OAF4B;AAAA,QAEnBC,UAFmB;;AAGnCT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,SAAJ;;AACA,UAAMC,YAAY,GAAG,MAAM;AACzBJ,MAAAA,aAAa,CAAC,CAACL,MAAM,CAACC,UAAR,EAAoBD,MAAM,CAACE,WAA3B,CAAD,CAAb;AACAK,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,MAAAA,YAAY,CAACF,SAAD,CAAZ;AACAA,MAAAA,SAAS,GAAGG,UAAU,CAAC,MAAMJ,UAAU,CAAC,KAAD,CAAjB,EAA0B,GAA1B,CAAtB;AACD,KALD;;AAMAP,IAAAA,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AACA,WAAO,MAAMT,MAAM,CAACa,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC,CAAb;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,SACE;AAAK,IAAA,SAAS,wBAAiBH,OAAO,GAAG,EAAH,GAAQ,QAAhC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,WADH,SACmBC,YADnB,CADF;AAKD","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function WindowSize() {\n  const [[windowWidth, windowHeight], setWindowSize] = useState([window.innerWidth, window.innerHeight])\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    let timeoutId\n    const handleResize = () => {\n      setWindowSize([window.innerWidth, window.innerHeight])\n      setVisible(true)\n      clearTimeout(timeoutId)\n      timeoutId = setTimeout(() => setVisible(false), 500)\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n  return (\n    <div className={`window-size ${visible ? '' : 'hidden'}`}>\n      {windowWidth} x {windowHeight}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}