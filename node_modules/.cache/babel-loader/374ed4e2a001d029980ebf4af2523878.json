{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _region = require('region');\n\nvar _region2 = _interopRequireDefault(_region);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _common = require('./utils/common');\n\nvar _common2 = _interopRequireDefault(_common);\n\nvar _validate = require('./utils/validate');\n\nvar _validate2 = _interopRequireDefault(_validate);\n\nvar _toStringValue = require('./utils/toStringValue');\n\nvar _toStringValue2 = _interopRequireDefault(_toStringValue);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = _react2.default.createClass((0, _objectAssign2.default)({\n  displayName: 'HueSpectrum',\n  getDefaultProps: function getDefaultProps() {\n    return {\n      height: 300,\n      width: 30,\n      pointerSize: 3,\n      defaultColor: require('./defaultColor'),\n      isHueSpectrum: true\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      h: 0\n    };\n  },\n  isComponentMounted: function isComponentMounted() {\n    return this.mounted;\n  },\n  componentDidUpdate: function componentDidUpdate() {// this.updateDragPositionIf()\n  },\n  componentDidMount: function componentDidMount() {\n    this.mounted = true;\n    this.updateDragPositionIf();\n  },\n  updateDragPositionIf: function updateDragPositionIf() {\n    if (!this.props.height) {\n      this.setState({});\n    }\n  },\n  render: function render() {\n    this.hsv = this.toColorValue(this.state.value || this.props.value || this.props.defaultValue || this.props.defaultColor);\n\n    if (this.state.h == 360 && !this.hsv.h) {\n      //in order to show bottom red as well on drag\n      this.hsv.h = 360;\n    }\n\n    var style = (0, _objectAssign2.default)({}, this.props.style);\n\n    if (this.props.height) {\n      style.height = this.props.height;\n    }\n\n    if (this.props.width) {\n      style.width = this.props.width;\n    }\n\n    var dragStyle = {\n      height: this.props.pointerSize\n    };\n    var dragPos = this.getDragPosition();\n\n    if (dragPos != null) {\n      dragStyle.top = dragPos;\n      dragStyle.display = 'block';\n    }\n\n    return _react2.default.createElement('div', {\n      className: 'react-color-picker__hue-spectrum',\n      style: style,\n      onMouseDown: this.onMouseDown\n    }, _react2.default.createElement('div', {\n      className: 'react-color-picker__hue-drag',\n      style: dragStyle\n    }, _react2.default.createElement('div', {\n      className: 'react-color-picker__hue-inner'\n    })));\n  },\n  getDragPosition: function getDragPosition(hsv) {\n    hsv = hsv || this.hsv;\n\n    if (!this.props.height && !this.isComponentMounted()) {\n      return null;\n    }\n\n    var height = this.props.height || _region2.default.fromDOM(_reactDom2.default.findDOMNode(this)).getHeight();\n\n    var size = this.props.pointerSize;\n    var pos = Math.round(hsv.h * height / 360);\n    var diff = Math.round(size / 2);\n    return pos - diff;\n  },\n  updateColor: function updateColor(point) {\n    point = (0, _validate2.default)(point);\n    this.hsv.h = point.y * 360 / point.height;\n\n    if (this.hsv.h != 0) {\n      this.state.h = this.hsv.h;\n    }\n\n    this.state.h = this.hsv.h != 0 ? this.hsv.h : 0;\n  },\n  toStringValue: _toStringValue2.default\n}, _common2.default));","map":null,"metadata":{},"sourceType":"script"}