{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _region = require('region');\n\nvar _region2 = _interopRequireDefault(_region);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _color = require('./utils/color');\n\nvar _common = require('./utils/common');\n\nvar _common2 = _interopRequireDefault(_common);\n\nvar _validate = require('./utils/validate');\n\nvar _validate2 = _interopRequireDefault(_validate);\n\nvar _toStringValue = require('./utils/toStringValue');\n\nvar _toStringValue2 = _interopRequireDefault(_toStringValue);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = _react2.default.createClass((0, _objectAssign2.default)({\n  displayName: 'SaturationSpectrum',\n  getDefaultProps: function getDefaultProps() {\n    return {\n      height: 300,\n      width: 300,\n      pointerSize: 7,\n      defaultColor: require('./defaultColor'),\n      isSaturationSpectrum: true\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      pointerTop: null,\n      pointerLeft: null\n    };\n  },\n  componentDidUpdate: function componentDidUpdate() {// this.updateDragPositionIf()\n  },\n  componentDidMount: function componentDidMount() {\n    this.updateDragPositionIf();\n  },\n  updateDragPositionIf: function updateDragPositionIf() {\n    if (!this.props.height || !this.props.width) {\n      this.setState({});\n    }\n  },\n  getDragPosition: function getDragPosition(hsv) {\n    hsv = hsv || this.hsv;\n    var width = this.props.width;\n    var height = this.props.height;\n    var sizeDefined = width && height;\n\n    if (!sizeDefined && !this.isMounted()) {\n      return null;\n    }\n\n    var region;\n\n    if (!sizeDefined) {\n      region = _region2.default.fromDOM(_reactDom2.default.findDOMNode(this));\n      height = height || region.getHeight();\n      width = width || region.getWidth();\n    }\n\n    var x = hsv.s * width;\n    var y = height - hsv.v * height;\n    var size = this.props.pointerSize;\n    var diff = Math.floor(size / 2);\n\n    if (this.props.value && this.state.mouseDown && !isNaN(this.state.mouseDown.x)) {\n      x = this.state.mouseDown.x;\n    }\n\n    return {\n      left: x - diff,\n      top: y - diff\n    };\n  },\n  prepareBackgroundColor: function prepareBackgroundColor(color) {\n    var hsv = color;\n    var col = (0, _color.fromRatio)({\n      h: hsv.h % 360 / 360,\n      s: 1,\n      v: 1\n    });\n    return col.toRgbString();\n  },\n  prepareProps: function prepareProps(thisProps, state) {\n    var props = (0, _objectAssign2.default)({}, thisProps);\n    var color = state.value || props.value || props.defaultValue || props.defaultColor;\n    props.color = color;\n    this.hsv = this.toColorValue(color);\n    props.style = this.prepareStyle(props);\n    props.className = this.prepareClassName(props);\n    return props;\n  },\n  prepareClassName: function prepareClassName(props) {\n    var className = props.className || '';\n    className += ' react-color-picker__saturation-spectrum';\n    return className;\n  },\n  prepareStyle: function prepareStyle(props) {\n    var style = (0, _objectAssign2.default)({}, props.style);\n\n    if (props.height) {\n      style.height = props.height;\n    }\n\n    if (props.width) {\n      style.width = props.width;\n    }\n\n    style.backgroundColor = this.prepareBackgroundColor(this.hsv);\n    return style;\n  },\n  render: function render() {\n    var props = this.p = this.prepareProps(this.props, this.state);\n    var dragStyle = {\n      width: this.props.pointerSize,\n      height: this.props.pointerSize\n    };\n    var dragPos = this.getDragPosition();\n\n    if (dragPos) {\n      dragStyle.top = dragPos.top;\n      dragStyle.left = dragPos.left;\n      dragStyle.display = 'block';\n    }\n\n    return _react2.default.createElement('div', {\n      className: props.className,\n      style: props.style,\n      onMouseDown: this.onMouseDown\n    }, _react2.default.createElement('div', {\n      className: 'react-color-picker__saturation-white'\n    }, _react2.default.createElement('div', {\n      className: 'react-color-picker__saturation-black'\n    })), _react2.default.createElement('div', {\n      className: 'react-color-picker__saturation-drag',\n      style: dragStyle\n    }, _react2.default.createElement('div', {\n      className: 'react-color-picker__saturation-inner'\n    })));\n  },\n  getSaturationForPoint: function getSaturationForPoint(point) {\n    return point.x / point.width;\n  },\n  getColorValueForPoint: function getColorValueForPoint(point) {\n    return (point.height - point.y) / point.height;\n  },\n  updateColor: function updateColor(point) {\n    point = (0, _validate2.default)(point);\n    this.hsv.s = this.getSaturationForPoint(point);\n    this.hsv.v = this.getColorValueForPoint(point);\n  },\n  toStringValue: _toStringValue2.default\n}, _common2.default));","map":null,"metadata":{},"sourceType":"script"}