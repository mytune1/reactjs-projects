{"ast":null,"code":"import _slicedToArray from \"/home/chandra/Desktop/useless/projects/reacthooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chandra/Desktop/useless/projects/reacthooks/src/Hooks-App/Component/Paint.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport Name from './Name';\nimport ColorPicker from 'react-color-picker';\nimport randomColor from 'randomcolor';\nimport Canvas from './canvas';\nimport WindowSize from './window';\nimport RefraseButton from './RefraseButton';\nexport default function Paint() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        colors = _useState2[0],\n        setColors = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeColor = _useState4[0],\n        setActiveColor = _useState4[1];\n\n  const getColors = () => {\n    const baseColor = randomColor().slice(1);\n    console.log(baseColor);\n    fetch(\"https://www.thecolorapi.com/scheme?hex=\".concat(baseColor, \"&mode=monochrome\")).then(res => res.json()).then(res => {\n      setColors(res.colors.map(color => color.hex.value));\n      setActiveColor(res.colors[0].hex.value);\n    });\n  };\n\n  useEffect(getColors, []);\n  const headerRef = useRef({\n    offsetHeight: 0\n  });\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    ref: headerRef,\n    style: {\n      borderTop: \"10px solid \".concat(activeColor)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Name, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(ColorPicker, {\n    colors: colors,\n    activeColor: activeColor,\n    setActiveColor: setActiveColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))), activeColor && React.createElement(Canvas, {\n    color: activeColor,\n    height: window.innerHeight - headerRef.current.offsetHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(WindowSize, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/chandra/Desktop/useless/projects/reacthooks/src/Hooks-App/Component/Paint.js"],"names":["React","useEffect","useState","useRef","Name","ColorPicker","randomColor","Canvas","WindowSize","RefraseButton","Paint","colors","setColors","activeColor","setActiveColor","getColors","baseColor","slice","console","log","fetch","then","res","json","map","color","hex","value","headerRef","offsetHeight","borderTop","marginTop","window","innerHeight","current"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,MAApC,QAAkD,OAAlD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,oBACAR,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,QACrBS,MADqB;AAAA,QACbC,SADa;;AAAA,qBAEUV,QAAQ,CAAC,IAAD,CAFlB;AAAA;AAAA,QAErBW,WAFqB;AAAA,QAERC,cAFQ;;AAG5B,QAAMC,SAAS,GAAG,MAAM;AACpB,UAAMC,SAAS,GAAGV,WAAW,GAAGW,KAAd,CAAoB,CAApB,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAI,IAAAA,KAAK,kDAA2CJ,SAA3C,sBAAL,CACKK,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACTV,MAAAA,SAAS,CAACU,GAAG,CAACX,MAAJ,CAAWa,GAAX,CAAeC,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUC,KAAlC,CAAD,CAAT;AACAb,MAAAA,cAAc,CAACQ,GAAG,CAACX,MAAJ,CAAW,CAAX,EAAce,GAAd,CAAkBC,KAAnB,CAAd;AACH,KALL;AAMH,GATD;;AAUA1B,EAAAA,SAAS,CAACc,SAAD,EAAY,EAAZ,CAAT;AACA,QAAMa,SAAS,GAAEzB,MAAM,CAAC;AAAC0B,IAAAA,YAAY,EAAC;AAAd,GAAD,CAAvB;AACA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,GAAG,EAAED,SAAb;AAAwB,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,uBAAgBjB,WAAhB;AAAX,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,KAAK,EAAE;AAAEkB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AACI,IAAA,MAAM,EAAEpB,MADZ;AAEI,IAAA,WAAW,EAAEE,WAFjB;AAGI,IAAA,cAAc,EAAEC,cAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ,EAaKD,WAAW,IACR,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEA,WADX;AAEI,IAAA,MAAM,EAAEmB,MAAM,CAACC,WAAP,GAAqBL,SAAS,CAACM,OAAV,CAAkBL,YAFnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdR,EAmBI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CADJ;AAuBH","sourcesContent":["import React, { useEffect, useState,useRef } from 'react'\nimport Name from './Name'\nimport ColorPicker from 'react-color-picker'\nimport randomColor from 'randomcolor'\nimport Canvas from './canvas'\nimport WindowSize from './window'\nimport RefraseButton from './RefraseButton'\n\nexport default function Paint() {\n    const [colors, setColors] = useState([])\n    const [activeColor, setActiveColor] = useState(null)\n    const getColors = () => {\n        const baseColor = randomColor().slice(1);\n        console.log(baseColor)\n        fetch(`https://www.thecolorapi.com/scheme?hex=${baseColor}&mode=monochrome`)\n            .then(res => res.json())\n            .then(res => {\n                setColors(res.colors.map(color => color.hex.value))\n                setActiveColor(res.colors[0].hex.value)\n            })\n    }\n    useEffect(getColors, [])\n    const headerRef= useRef({offsetHeight:0})\n    return (\n        <div className=\"app\">\n            <header ref={headerRef} style={{ borderTop: `10px solid ${activeColor}` }}>\n                <div>\n                    <Name />\n                </div>\n                <div style={{ marginTop: 10 }}>\n                    <ColorPicker\n                        colors={colors}\n                        activeColor={activeColor}\n                        setActiveColor={setActiveColor}\n                    />\n                </div>\n            </header>\n            {activeColor && (\n                <Canvas\n                    color={activeColor}\n                    height={window.innerHeight - headerRef.current.offsetHeight}\n                />\n            )}\n            <WindowSize />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}