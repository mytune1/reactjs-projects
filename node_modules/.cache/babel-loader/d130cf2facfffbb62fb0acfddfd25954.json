{"ast":null,"code":"import _slicedToArray from \"/home/chandra/Desktop/useless/projects/reacthooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chandra/Desktop/useless/projects/reacthooks/src/Hooks-App/Playground.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport randomColor from 'randomcolor';\nexport default function Playground() {\n  const _useState = useState(50),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1]; // useState has two parameters 1) state and 2) function \n\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        color = _useState4[0],\n        setColor = _useState4[1]; // useState has two parameters 1) state and 2) function \n\n\n  useEffect(() => {\n    setColor(randomColor());\n  }, [count]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      border: \"10px solid \".concat(color),\n      width: '200px',\n      height: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, count, React.createElement(\"button\", {\n    onClick: () => setCount(currentCount => currentCount - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"-\"), \" \", React.createElement(\"button\", {\n    onClick: () => setCount(currentCount => currentCount + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"+\"), \" \"));\n}","map":{"version":3,"sources":["/home/chandra/Desktop/useless/projects/reacthooks/src/Hooks-App/Playground.js"],"names":["React","useState","useEffect","useRef","randomColor","Playground","count","setCount","color","setColor","border","width","height","currentCount"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAmCC,MAAnC,QAAiD,OAAjD;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA,oBACPJ,QAAQ,CAAC,EAAD,CADD;AAAA;AAAA,QACzBK,KADyB;AAAA,QACnBC,QADmB,kBACO;;;AADP,qBAEPN,QAAQ,CAAC,IAAD,CAFD;AAAA;AAAA,QAEzBO,KAFyB;AAAA,QAEnBC,QAFmB,kBAES;;;AAIzCP,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACH,GAFQ,EAEP,CAACE,KAAD,CAFO,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAACI,MAAAA,MAAM,uBAAeF,KAAf,CAAP;AAA8BG,MAAAA,KAAK,EAAC,OAApC;AAA4CC,MAAAA,MAAM,EAAC;AAAnD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KADL,EAEI;AAAS,IAAA,OAAO,EAAE,MAAKC,QAAQ,CAACM,YAAY,IAAEA,YAAY,GAAG,CAA9B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,OAGI;AAAS,IAAA,OAAO,EAAE,MAAKN,QAAQ,CAACM,YAAY,IAAEA,YAAY,GAAG,CAA9B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,MAFA,CADJ;AAYH","sourcesContent":["import React, { useState,useEffect,useRef } from 'react'\nimport randomColor from 'randomcolor'\n\nexport default function Playground(){\n    const [count,setCount] = useState(50); // useState has two parameters 1) state and 2) function \n    const [color,setColor] = useState(null); // useState has two parameters 1) state and 2) function \n\n    \n\n    useEffect(()=>{\n        setColor(randomColor())\n    },[count])\n\n    return(\n        <div>\n            <div style={{border:`10px solid ${color}`,width:'200px',height:'20px'}}></div>\n        <div>\n            {count} \n            <button  onClick={()=> setCount(currentCount=>currentCount - 1)}>-</button> {/* by function || two inline function */}\n            <button  onClick={()=> setCount(currentCount=>currentCount + 1)}>+</button>\n            {/* <button  onClick={()=> setCount(count=>count - 1)}>+</button>  \n            <button  onClick={()=> setCount(count=>count + 1)}>+</button> */} {/*by value*/}\n        </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}