{"ast":null,"code":"import _slicedToArray from \"/home/chandra/Desktop/useless/projects/reacthooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chandra/Desktop/useless/projects/reacthooks/src/Hooks-App/Component/Paint.js\";\nimport React, { useState, useEffect, useCal } from 'react';\nimport Name from './Name';\nimport Canvas from './Canvas';\nimport ColorPicker from './ColorPicker';\nimport RefrashButton from './RefreshButton';\nimport WindowSize from './WindowSize';\nimport randomColor from 'randomcolor';\nexport default function Paint() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        colors = _useState2[0],\n        setColors = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeColor = _useState4[0],\n        setActiveColor = _useState4[1];\n\n  const getColors = useCallback(() => {\n    const baseColor = randomColor().slice(1);\n    fetch(\"https://www.thecolorapi.com/scheme?hex=\".concat(baseColor, \"&mode=monochrome\")).then(res => res.json()).then(res => {\n      setColors(res.colors.map(color => color.hex.value));\n      setActiveColor(res.colors[0].hex.value);\n    });\n  });\n  useEffect(getColors, []);\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      borderTop: \"10px solid \".concat(activeColor)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Name, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(ColorPicker, {\n    colors: colors,\n    activeColor: activeColor,\n    setActiveColor: setActiveColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(RefrashButton, {\n    cb: getColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), activeColor && React.createElement(Canvas, {\n    color: activeColor,\n    height: window.innerHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(WindowSize, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/chandra/Desktop/useless/projects/reacthooks/src/Hooks-App/Component/Paint.js"],"names":["React","useState","useEffect","useCal","Name","Canvas","ColorPicker","RefrashButton","WindowSize","randomColor","Paint","colors","setColors","activeColor","setActiveColor","getColors","useCallback","baseColor","slice","fetch","then","res","json","map","color","hex","value","borderTop","marginTop","window","innerHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,oBACFT,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,QACvBU,MADuB;AAAA,QACfC,SADe;;AAAA,qBAEQX,QAAQ,CAAC,IAAD,CAFhB;AAAA;AAAA,QAEvBY,WAFuB;AAAA,QAEVC,cAFU;;AAG9B,QAAMC,SAAS,GAAGC,WAAW,CAAC,MAAM;AAClC,UAAMC,SAAS,GAAGR,WAAW,GAAGS,KAAd,CAAoB,CAApB,CAAlB;AACAC,IAAAA,KAAK,kDAA2CF,SAA3C,sBAAL,CACCG,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;AACXT,MAAAA,SAAS,CAACS,GAAG,CAACV,MAAJ,CAAWY,GAAX,CAAeC,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUC,KAAlC,CAAD,CAAT;AACAZ,MAAAA,cAAc,CAACO,GAAG,CAACV,MAAJ,CAAW,CAAX,EAAcc,GAAd,CAAkBC,KAAnB,CAAd;AACD,KALD;AAMD,GAR4B,CAA7B;AASAxB,EAAAA,SAAS,CAACa,SAAD,EAAY,EAAZ,CAAT;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAE;AAAEY,MAAAA,SAAS,uBAAgBd,WAAhB;AAAX,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,KAAK,EAAE;AAAEe,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAEjB,MADV;AAEE,IAAA,WAAW,EAAEE,WAFf;AAGE,IAAA,cAAc,EAAEC,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAEC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAJF,CADF,EAcGF,WAAW,IACV,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEA,WADT;AAEE,IAAA,MAAM,EAAEgB,MAAM,CAACC,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAoBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;AAwBD","sourcesContent":["import React, { useState, useEffect, useCal } from 'react'\nimport Name from './Name'\nimport Canvas from './Canvas'\nimport ColorPicker from './ColorPicker'\nimport RefrashButton from './RefreshButton'\nimport WindowSize from './WindowSize'\nimport randomColor from 'randomcolor'\n\nexport default function Paint() {\n  const [colors, setColors] = useState([])\n  const [activeColor, setActiveColor] = useState(null)\n  const getColors = useCallback(() => {\n    const baseColor = randomColor().slice(1);\n    fetch(`https://www.thecolorapi.com/scheme?hex=${baseColor}&mode=monochrome`)\n    .then(res => res.json())\n    .then(res => {\n      setColors(res.colors.map(color => color.hex.value))\n      setActiveColor(res.colors[0].hex.value)\n    })\n  })\n  useEffect(getColors, [])\n  \n  return (\n    <div className=\"app\">\n      <header style={{ borderTop: `10px solid ${activeColor}` }}>\n        <div>\n          <Name />\n        </div>\n        <div style={{ marginTop: 10 }}>\n          <ColorPicker\n            colors={colors}\n            activeColor={activeColor}\n            setActiveColor={setActiveColor}\n          />\n          <RefrashButton cb={getColors} />\n        </div>\n      </header>\n      {activeColor && (\n        <Canvas\n          color={activeColor}\n          height={window.innerHeight}\n        />\n      )}\n      <WindowSize />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}