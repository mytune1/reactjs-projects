{"ast":null,"code":"import _slicedToArray from \"/home/chandra/Desktop/useless/projects/reacthooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chandra/Desktop/useless/projects/reacthooks/src/Hooks-App/Playground.js\";\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport randomColor from 'randomcolor';\nexport default function Playground() {\n  const _useState = useState(50),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1]; // useState has two parameters 1) state and 2) function     \n\n\n  const inputRef = useRef();\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        color = _useState4[0],\n        setColor = _useState4[1]; // useState has two parameters 1) state and 2) function \n\n\n  useEffect(() => {\n    setColor(randomColor());\n    inputRef.current.focus();\n  }, [count]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      border: \"10px solid \".concat(color),\n      width: '200px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, count, React.createElement(\"button\", {\n    onClick: () => setCount(currentCount => currentCount - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"-\"), \" \", React.createElement(\"button\", {\n    onClick: () => setCount(currentCount => currentCount + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"+\"), \" \", React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"range\",\n    onChange: e => setCount(e.target.value),\n    value: count,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Calculate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n}\n\nfunction Calculate() {\n  const renderCount = useRef(1);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, renderCount.current++);\n}","map":{"version":3,"sources":["/home/chandra/Desktop/useless/projects/reacthooks/src/Hooks-App/Playground.js"],"names":["React","useState","useEffect","useRef","useCallback","useMemo","randomColor","Playground","count","setCount","inputRef","color","setColor","current","focus","border","width","currentCount","e","target","value","Calculate","renderCount"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,WAA7C,EAA0DC,OAA1D,QAAyE,OAAzE;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA,oBACPN,QAAQ,CAAC,EAAD,CADD;AAAA;AAAA,QAC1BO,KAD0B;AAAA,QACnBC,QADmB,kBACO;;;AAExC,QAAMC,QAAQ,GAAGP,MAAM,EAAvB;;AAHiC,qBAKPF,QAAQ,CAAC,IAAD,CALD;AAAA;AAAA,QAK1BU,KAL0B;AAAA,QAKnBC,QALmB,kBAKS;;;AAI1CV,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACAI,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB;AACH,GAHQ,EAGN,CAACN,KAAD,CAHM,CAAT;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,uBAAgBJ,KAAhB,CAAR;AAAiCK,MAAAA,KAAK,EAAE;AAAxC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KADL,EAEI;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACQ,YAAY,IAAIA,YAAY,GAAG,CAAhC,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,OAGI;AAAQ,IAAA,OAAO,EAAE,MAAMR,QAAQ,CAACQ,YAAY,IAAIA,YAAY,GAAG,CAAhC,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,OAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI;AAAO,IAAA,GAAG,EAAEP,QAAZ;AAAsB,IAAA,IAAI,EAAC,OAA3B;AAAmC,IAAA,QAAQ,EAAEQ,CAAC,IAAIT,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1D;AAA4E,IAAA,KAAK,EAAEZ,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAFJ,EAWI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAeH;;AACD,SAASa,SAAT,GAAqB;AACjB,QAAMC,WAAW,GAAGnB,MAAM,CAAC,CAAD,CAA1B;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMmB,WAAW,CAACT,OAAZ,EAAN,CAAP;AACH","sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react'\nimport randomColor from 'randomcolor'\n\nexport default function Playground() {\n    const [count, setCount] = useState(50); // useState has two parameters 1) state and 2) function     \n\n    const inputRef = useRef()\n\n    const [color, setColor] = useState(null); // useState has two parameters 1) state and 2) function \n\n\n\n    useEffect(() => {\n        setColor(randomColor());\n        inputRef.current.focus();\n    }, [count])\n\n    return (\n        <div>\n            <div style={{ border: `10px solid ${color}`, width: '200px' }}></div>\n            <div>\n                {count}\n                <button onClick={() => setCount(currentCount => currentCount - 1)}>-</button> {/* by function || two inline function */}\n                <button onClick={() => setCount(currentCount => currentCount + 1)}>+</button>\n                {/* <button  onClick={()=> setCount(count=>count - 1)}>+</button>  \n            <button  onClick={()=> setCount(count=>count + 1)}>+</button> */} {/*by value*/}\n                <hr />\n                <input ref={inputRef} type=\"range\" onChange={e => setCount(e.target.value)} value={count} />\n            </div>\n            <Calculate/>\n        </div>\n    )\n}\nfunction Calculate() {\n    const renderCount = useRef(1);\n    return <div>{renderCount.current++}</div>\n}"]},"metadata":{},"sourceType":"module"}